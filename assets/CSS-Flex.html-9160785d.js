import{_ as l,o as i,c as e,f as a}from"./app-f6785d32.js";const n="/flexImg/flex01.png",t="/flexImg/flex02.png",r={},c=a('<h2 id="css-flex布局" tabindex="-1"><a class="header-anchor" href="#css-flex布局" aria-hidden="true">#</a> CSS-Flex布局</h2><ul><li>flex布局体验</li><li>flex布局原理</li><li>flex布局父项常见属性</li><li>flex布局子项常见属性</li></ul><h4 id="传统布局" tabindex="-1"><a class="header-anchor" href="#传统布局" aria-hidden="true">#</a> 传统布局</h4><ol><li>兼容性好</li><li>布局繁琐</li><li>局限性，不能在移动端很好的布局</li></ol><h4 id="flex弹性布局" tabindex="-1"><a class="header-anchor" href="#flex弹性布局" aria-hidden="true">#</a> flex弹性布局</h4><ol><li>操作方便，布局极为简单，移动端应用很广泛</li><li>PC端浏览器支持情况较差</li></ol><h4 id="布局原理" tabindex="-1"><a class="header-anchor" href="#布局原理" aria-hidden="true">#</a> 布局原理</h4><ul><li>当我们为父盒子设为flex布局以后，子元素的float、clear和vertical-align属性将失效。</li><li>伸缩布局=弹性布局=flex布局</li></ul><p>采用Flex布局的元素，称为Flex容器，简称“容器”。它的所有子元素自动成为容器成员，称为Flex项目，简称“项目”。</p><ul><li>体验中div就是flex父容器</li><li>span就是子容器</li><li>子容器可以横向排列也可以纵向排列</li></ul><p>总结flex布局原理：</p><p>就是通过给父盒子添加flex属性，来控制子盒子的位置和排列方式。</p><h4 id="常见父项属性" tabindex="-1"><a class="header-anchor" href="#常见父项属性" aria-hidden="true">#</a> 常见父项属性</h4><p>以下由6个属性是对父元素设置的：</p><ul><li>flex-direction：设置主轴的方向</li><li>justify-content：设置主轴上的子元素排列方式</li><li>flex-wrap：设置子元素是否换行</li><li>align-content：设置侧轴上的子元素的排列方式（多行）</li><li>align-item：设置侧轴上的子元素排列方式（单行）</li><li>flex-flow：复合属性，相当于同时设置了flex-direction和flex-wrap</li></ul><h4 id="justify-content-使用之前确定主轴是哪个1" tabindex="-1"><a class="header-anchor" href="#justify-content-使用之前确定主轴是哪个1" aria-hidden="true">#</a> justify-content（使用之前确定主轴是哪个1）</h4><p><img src="'+n+'" alt="image-20230223140956533"></p><h4 id="align-content-设置侧轴上的子元素的排列方式-多行" tabindex="-1"><a class="header-anchor" href="#align-content-设置侧轴上的子元素的排列方式-多行" aria-hidden="true">#</a> align-content 设置侧轴上的子元素的排列方式（多行）</h4><p><img src="'+t+'" alt="image-20230223161711445"></p><p>align-content和align-items区别</p><ul><li>align-items适用于单行情况下，只有上对齐、下对齐、居中和拉伸</li><li>align-content适用于<strong>换行</strong>（多行）的情况下（单行情况下无效），可以设置上对齐、下对齐、居中、拉伸以及平均分配剩余空间等属性值</li><li>总结就是单行找align-items多行找align-content</li></ul><h4 id="flex-flow" tabindex="-1"><a class="header-anchor" href="#flex-flow" aria-hidden="true">#</a> flex-flow</h4><ul><li>flex-direction：设置主轴的方向</li><li>justify-content：设置主轴上的子元素排列方式</li><li>flex-wrap：设置子元素是否换行</li><li>align-content：设置侧轴上的子元素的排列方式（多行）、</li><li>align-items：设置侧轴上的子元素排列方式（单行）</li><li>flex-flow：复合属性，相当于同时设置了flex-direction和flex-wrap</li></ul>',23),f=[c];function o(h,d){return i(),e("div",null,f)}const x=l(r,[["render",o],["__file","CSS-Flex.html.vue"]]);export{x as default};
