import{_ as e,o as t,c as p,f as a}from"./app-28f5d3d5.js";const i={},r=a('<h1 id="vite基础教程" tabindex="-1"><a class="header-anchor" href="#vite基础教程" aria-hidden="true">#</a> vite基础教程</h1><p>vite：思维比较前卫且先进的构建工具 他确实解决了一些webpack解决不了问题，同时降低了一些心智负担。</p><p>未来使用vue-cli去构建vue项目的时候你要写的vue.config.js不再是webpack的配置而是vite的配置（目前只基于浏览器项目）</p><p><strong>主要模块</strong>：</p><p>1、什么是构建工具？</p><p>2、webpack 的一个缺点在哪</p><p>3、es module 的规范</p><p>4、vite 他到底是什么东西</p><p>5、vite 的基本安装和使用</p><p>6、vite 的编译结果</p><p>7、vite编译结果的分析</p><p>8、vite的配置文件</p><p>9、vite中处理Css，静态资源怎么去做</p><p>10、vite的插件以及常用插件的使用</p><p>11、vite与ts的结合</p><p>12、vite构建react项目、svelte项目、vue3项目</p><p>13、vite的一个构建原理</p><h3 id="构建工具" tabindex="-1"><a class="header-anchor" href="#构建工具" aria-hidden="true">#</a> 构建工具</h3><p>语法降级：babel ——&gt; 将es的新语法转换到旧版浏览器可以接受的语法。</p><p>什么是构建工具？——&gt;<strong>他让我们不用关系生产的代码也不用关心代码如何在浏览器运行，只要关心我们的开发怎么写的爽怎么写就好了。</strong></p><p>webpack更多的关注兼容性</p><p>vite 关注浏览器的开发体验</p><h6 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h6>',23),s=[r];function c(n,o){return t(),p("div",null,s)}const d=e(i,[["render",c],["__file","vite.html.vue"]]);export{d as default};
