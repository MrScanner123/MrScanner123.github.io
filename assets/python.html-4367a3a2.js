import{_ as i,o as a,c as l,f as n}from"./app-52e64b93.js";const e="/pythonImg/py01.png",p="/pythonImg/py02.png",s="/pythonImg/py03.png",t={},r=n('<h1 id="python" tabindex="-1"><a class="header-anchor" href="#python" aria-hidden="true">#</a> python</h1><p><img src="'+e+'" alt="image-20230228133622208"></p><h2 id="一、你好python" tabindex="-1"><a class="header-anchor" href="#一、你好python" aria-hidden="true">#</a> 一、你好Python</h2><h3 id="_1、变量" tabindex="-1"><a class="header-anchor" href="#_1、变量" aria-hidden="true">#</a> 1、变量</h3><p>变量：<strong>在程序运行时</strong>，能<strong>储存</strong>计算结果或能<strong>表示值</strong>的抽象概念。</p><p>简单的说，变量就是在程序运行时，记录数据用的</p><p>变量的定义格式：</p><p>变量名称 = 变量的值</p><ol><li><p>变量是什么，有什么作用？</p><p>变量就是在程序运行时，记录数据用的</p></li><li><p>变量的定义格式？</p><p>变量名 = 变量值</p></li><li><p>变量的特征是？</p><p>变量的值可以改变</p></li><li><p>print语句如何输出多份内容？ print（内容1，内容2。。。）</p></li></ol><h3 id="_2、数据类型" tabindex="-1"><a class="header-anchor" href="#_2、数据类型" aria-hidden="true">#</a> 2、数据类型</h3><ul><li>掌握type（）查看数据类型</li><li>变量无类型，数据有类型</li></ul><p>变量有类型吗？</p><p>我们通过type() 查看的是：变量存储的数据的类型，因为，变量无类型，但是它存储的数据有。</p><h3 id="_3、数据类型的转换" tabindex="-1"><a class="header-anchor" href="#_3、数据类型的转换" aria-hidden="true">#</a> 3、数据类型的转换</h3><p><img src="'+p+`" alt="image-20230301132442937"></p><h3 id="_4、字符串格式化" tabindex="-1"><a class="header-anchor" href="#_4、字符串格式化" aria-hidden="true">#</a> 4、字符串格式化</h3><ol><li><p>字符串格式化的语法？</p><p>&quot;%占位符&quot; % 变量</p></li><li><p>常用占位符有：</p><ul><li>字符串： %s</li><li>整数： %d</li><li>浮点数 ： %f</li></ul></li><li><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name <span class="token operator">=</span> <span class="token string">&quot;传智播客&quot;</span>
set_up_year<span class="token operator">=</span> <span class="token number">2006</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;我是</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">,成立于</span><span class="token interpolation"><span class="token punctuation">{</span>set_up_year<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_5、input" tabindex="-1"><a class="header-anchor" href="#_5、input" aria-hidden="true">#</a> 5、Input</h3><ul><li><p>数据输出：print</p></li><li><p>数据输入：input</p><p>使用上也非常简单</p></li><li><p>使用input（）语句可以从键盘获取输入</p></li><li><p>使用一个变量接收（存储）input语句获取的键盘输入数据即可</p></li></ul><p>总结：</p><ol><li>input()语句的功能是，获取键盘输入的数据</li><li>可以使用：input（提示信息）,用以在使用者输入内容之前显示提示信息。</li><li>要注意，无论键盘输入什么类型的数据，获取到的数据<strong>永远都是字符串类型</strong>。</li></ol><h3 id="_6、python判断语句" tabindex="-1"><a class="header-anchor" href="#_6、python判断语句" aria-hidden="true">#</a> 6、python判断语句</h3><ol><li><p>在python中，可以表示真假的数据类型是：</p><p>布尔类型，字面量True表示真，字面量False表示假</p></li><li><p>出来可以定义布尔类型外，还可以通过比较运算符计算得到布尔类型</p><ul><li>== 判断是否相等，！=判断是否不相等</li></ul></li></ol><h3 id="_7、if语句的基本格式" tabindex="-1"><a class="header-anchor" href="#_7、if语句的基本格式" aria-hidden="true">#</a> 7、if语句的基本格式</h3><ol><li><p>if语句的基本格式</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> 要判断的条件：
	条件成立时，要做的事情
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>if语句的注意事项：</p><ul><li>判断条件的结果一定要是布尔类型</li><li>不要忘记判断条件后的：冒号</li><li>归属于if语句的代码块，需在前方填充四个空格缩进</li></ul></li></ol><h3 id="_8、函数" tabindex="-1"><a class="header-anchor" href="#_8、函数" aria-hidden="true">#</a> 8、函数</h3><p>函数的定义：</p><p>def 函数名(传入参数)：</p><p>​ 函数体</p><p>​ return 返回值</p><p><img src="`+s+'" alt="image-20230328144430036"></p><h3 id="_9、列表" tabindex="-1"><a class="header-anchor" href="#_9、列表" aria-hidden="true">#</a> 9、列表</h3><ol><li>列表的下标索引是什么？ <ul><li>列表的每一个元素，都有编号称之为下标索引</li><li>从前向后的方向，编号从0开始递增</li><li>从后向前的方向，编号从-1开始递减</li></ul></li><li>如何通过下标索引取出对应位置的元素呢？ <ul><li>列表【下标】，即可取出</li></ul></li><li>下标索引的注意事项： <ul><li>要注意下标索引的取值范围， 超出范围无法取出元素，并且会报错。</li></ul></li></ol><h4 id="_9-1、列表的常用操作" tabindex="-1"><a class="header-anchor" href="#_9-1、列表的常用操作" aria-hidden="true">#</a> 9.1、列表的常用操作</h4><p>列表除了可以：</p><ul><li>定义</li><li>使用下标索引获取值</li></ul><p>以外，列表也提供了一系列功能：</p><ul><li>插入元素</li><li>删除元素</li><li>清空元素</li><li>修改元素</li><li>统计元素个数</li></ul><p>等等功能，这些功能我们称之为：列表的方法。</p><ul><li>插入元素 el.insert(索引，插入元素)</li><li>追加元素 el.append(插入的元素)</li><li>追加一批元素 el.extend(&#39;追加元素1&#39;，追加元素2)||el.extend(列表)</li><li>删除元素 del el[索引值] || el.pop(索引值) 还可以用变量接收 所删元素</li><li>删除匹配项 el.remove(所删匹配项)</li><li>清空列表 el.clear()</li></ul>',40),o=[r];function d(h,c){return a(),l("div",null,o)}const _=i(t,[["render",d],["__file","python.html.vue"]]);export{_ as default};
