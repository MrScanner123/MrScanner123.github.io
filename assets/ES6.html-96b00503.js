import{_ as n,o as s,c as a,f as e}from"./app-52e64b93.js";const t={},p=e(`<h2 id="es6进阶语法" tabindex="-1"><a class="header-anchor" href="#es6进阶语法" aria-hidden="true">#</a> ES6进阶语法</h2><h4 id="let和const解决" tabindex="-1"><a class="header-anchor" href="#let和const解决" aria-hidden="true">#</a> let和const解决</h4><ol><li>var的变量穿透的问题</li><li>常量修改的问题</li></ol><p>在实际开发和生产中，如果是小程序，uniapp或者 一些脚手架中，可以大胆的使用let和const</p><p>如果在web开发，建议大家还是使用后var，因为在一些低版本的浏览器还是不支持let和const。</p><h4 id="模板字符串" tabindex="-1"><a class="header-anchor" href="#模板字符串" aria-hidden="true">#</a> 模板字符串</h4><p>动静态字符串拼接问题：</p><p>以前：</p><p>let address = <strong>&quot;我是&quot;</strong> + person.name**&quot;，正在&quot;<strong>+person.address+</strong>&quot;讲课，讲课的内容会上传到官网:&quot;<strong>+person.link+</strong>&quot;平台&quot;**</p><p>现在：</p><p>let address = <strong>我是</strong> \${person.name]<strong>，正在</strong>\${person.address}<strong>讲课，讲课的内容会上传到官网:</strong>\${person.link}<strong>平台</strong></p><h4 id="函数默认参数" tabindex="-1"><a class="header-anchor" href="#函数默认参数" aria-hidden="true">#</a> 函数默认参数</h4><p>方法参数可以带值</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>function sum(a=100,b=100) {
return a + b;
}
var result = sum(100)
clg(&quot;result = &quot;, result)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="箭头函数——重点" tabindex="-1"><a class="header-anchor" href="#箭头函数——重点" aria-hidden="true">#</a> 箭头函数——重点</h4><ol><li>去掉function</li><li>在括号后面加箭头</li><li>如果逻辑代码仅有return可以直接省去</li><li>如果参数只有一个，可以把括号省去（如果有多个参数就不能省去）</li></ol><h4 id="对象简写" tabindex="-1"><a class="header-anchor" href="#对象简写" aria-hidden="true">#</a> 对象简写</h4><p>ES6简写</p><p>因为对象是key：value存在</p><ol><li>如果key和变量的名字一致，可以指定一次即可</li><li>如果value是一个函数，可以把<code>:function</code>去掉，只剩下（）即可。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> title <span class="token operator">=</span> <span class="token string">&quot;扬子江&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> link <span class="token operator">=</span> <span class="token string">&quot;www.yangzijiang.com&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> info <span class="token operator">=</span> <span class="token punctuation">{</span>
    title<span class="token punctuation">,</span>
    link<span class="token punctuation">,</span>
    <span class="token function">go</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;132131&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
info2<span class="token punctuation">.</span>go
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="对象解构" tabindex="-1"><a class="header-anchor" href="#对象解构" aria-hidden="true">#</a> 对象解构</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> title <span class="token operator">=</span> <span class="token string">&quot;扬子江&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> link <span class="token operator">=</span> <span class="token string">&quot;www.yangzijiang.com&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> info <span class="token operator">=</span> <span class="token punctuation">{</span>
    title<span class="token punctuation">,</span>
    link<span class="token punctuation">,</span>
    <span class="token function">go</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;132131&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>通过.方式</li></ul><p>console.log(info.title)</p><p>console.log(info.link)</p><p>info.go()</p><ul><li>通过[]的方式</li></ul><p>console.log(info[&quot;title&quot;])</p><p>console.log(info[&quot;link&quot;])</p><p>info[&quot;go&quot;] ()</p><ul><li>es6对象解构——其实就快速获取属性和方法的一种形式</li></ul><p>var {title，link} = info2；</p><p>var title = info2.title</p><p>vat link = info2.link</p><p>console.log(title,link);</p><p>go();</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span><span class="token string">&quot;广东&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">link</span><span class="token operator">:</span><span class="token string">&quot;www.baidu.com&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">phone</span><span class="token operator">:</span><span class="token number">132423421312</span><span class="token punctuation">,</span>
    <span class="token function">go</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;开始上班&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token keyword">var</span> <span class="token punctuation">{</span>name<span class="token punctuation">,</span>address<span class="token punctuation">,</span><span class="token operator">...</span>person2<span class="token punctuation">}</span> <span class="token operator">=</span> person<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span>
<span class="token comment">//name、address赋给person</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person2<span class="token punctuation">)</span>
<span class="token comment">//剩下的属性都赋给person2</span>
<span class="token comment">//在解构的过程中就创建了person2这个对象</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三个点-扩展运算符" tabindex="-1"><a class="header-anchor" href="#三个点-扩展运算符" aria-hidden="true">#</a> 三个点（...）扩展运算符</h3><ol><li><p>字符串可以展开，用逗号分开的集合</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;abc&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>str<span class="token punctuation">)</span>
<span class="token comment">//相当于</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>数组</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>所有能够迭代的东西，都可以用展开运算符...进行展开</li></ul></li></ol>`,40),o=[p];function l(i,c){return s(),a("div",null,o)}const r=n(t,[["render",l],["__file","ES6.html.vue"]]);export{r as default};
