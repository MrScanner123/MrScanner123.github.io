import{_ as a,o as n,c as s,f as e}from"./app-52e64b93.js";const t={},i=e(`<h2 id="vue基础" tabindex="-1"><a class="header-anchor" href="#vue基础" aria-hidden="true">#</a> VUE基础</h2><ol><li>JavaScript框架</li><li>简化Dom操作</li><li>响应式数据驱动</li></ol><h2 id="第一个vue程序" tabindex="-1"><a class="header-anchor" href="#第一个vue程序" aria-hidden="true">#</a> 第一个vue程序</h2><ul><li>导入<strong>开发版本</strong>的vue.js</li><li>创建Vue实例对象，设置<strong>el</strong>属性和<strong>data</strong>属性</li><li>使用简洁的<strong>模板语法</strong>把数据渲染到页面上</li></ul><h2 id="el-挂载点" tabindex="-1"><a class="header-anchor" href="#el-挂载点" aria-hidden="true">#</a> el：挂载点</h2><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
{{ message }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

var app = new Vue({
el:&quot;#app&quot;,
data:{
	message:&quot;HELLO world！&quot;
}
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Vue实例的作用范围是什么？</p><ul><li>Vue会管理el选项<strong>命中的元素</strong>及其内部的<strong>后代元素</strong></li></ul><p>是否可以使用其他的选择器？</p><ul><li>可以，标签选择器、类选择器、id选择器（<strong>推荐使用</strong>）</li></ul><p>是否可以设置其他的dom元素？</p><ul><li>可以使用其他的双标签，不能使用HTML和BODY</li></ul><h2 id="data-数据对象" tabindex="-1"><a class="header-anchor" href="#data-数据对象" aria-hidden="true">#</a> data:数据对象</h2><ul><li><p>Vue中用到的数据定义在<strong>data</strong>中</p></li><li><p>data中可以写<strong>复杂类型</strong>的数据</p></li><li><p>渲染复杂类型的数据时，遵循js的<strong>语法</strong>即可</p></li></ul><h3 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> watch：</h3>`,15),l=[i];function r(d,o){return n(),s("div",null,l)}const c=a(t,[["render",r],["__file","VUE.html.vue"]]);export{c as default};
